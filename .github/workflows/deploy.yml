name: Deploy to EC2 🚀

on:
  push:
    branches:
      - "main"

jobs:
  setup_python:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout current branch ✅
        uses: actions/checkout@v2

      - name: Cache Python dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Set up SSH key and whitelist EC2 IP address 🐻‍❄️
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

  deploy:
    runs-on: ubuntu-latest
    needs: setup_python
    steps:
      - name: Copy files and create directory on remote server 🚙
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
        run: |
          ssh -o StrictHostKeyChecking=no $EC2_USERNAME@$EC2_HOST 'mkdir -p /home/ubuntu/temporary && scp -r * $EC2_USERNAME@$EC2_HOST:/home/ubuntu/temporary/'

      - name: Run Bash Script To Deploy App 🚀
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
        run: |
          ssh -o StrictHostKeyChecking=no $EC2_USERNAME@$EC2_HOST "chmod +x ./temporary/deploy.sh && ./temporary/deploy.sh"

      - name: Clean up SSH key 🚀
        if: always()
        run: rm -f ~/.ssh/id_rsa